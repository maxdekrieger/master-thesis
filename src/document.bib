% Manual citations here

@inproceedings{Groenewegen2020,
author = {Groenewegen, Danny M. and Chastelet, Elmer van and Visser, Eelco},
title = {Evolution of the WebDSL Runtime: Reliability Engineering of the WebDSL Web Programming Language},
year = {2020},
isbn = {9781450375078},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3397537.3397553},
doi = {10.1145/3397537.3397553},
abstract = {Web applications are ideal for implementing information systems; they can organize and persist the data in a database, do not require installation on client machines, and can be instantly updated everywhere. However, web programming is complex due to its heterogeneous nature, causing web frameworks to suffer from insufficient or leaky abstraction, weak static consistency checking, and security features that are not enforced. We developed the WebDSL web programming language, which supports direct expression of intent, strong static consistency checking, linguistic abstractions for web programming concerns, and automatically enforces security features for web applications. We have used WebDSL for over 10 years to create information systems for academic workflows with thousands of users. Based on our experiences with these applications, we improved the WebDSL compiler and runtime to increase robustness, performance, and security of applications. In this experience report, we reflect on the lessons learned and improvements made to the language runtime.},
booktitle = {Conference Companion of the 4th International Conference on Art, Science, and Engineering of Programming},
pages = {77–83},
numpages = {7},
keywords = {web programming, domain-specific languages, web security, integrated development environments, experience report, compilers, web applications},
location = {Porto, Portugal},
series = { '20}
}

@inproceedings{Visser2007,
  title = {{WebDSL}: {A} Case Study in Domain-Specific Language Engineering},
  author = {Eelco Visser},
  year = {2007},
  doi = {10.1007/978-3-540-88643-3_7},
  url = {http://dx.doi.org/10.1007/978-3-540-88643-3_7},
  tags = {WebDSL, reusable components, DSL engineering, web application development, data-flow language, pattern language, case study, software components, SDF, meta-model, abstract syntax, modeling language, Stratego/XT, language engineering, software language engineering, language modeling, software component, web engineering, language design, reuse, model-driven development, data-flow, survey, software engineering, model-driven engineering, web applications, DSL, Meta-Environment, incremental, design, process modeling, systematic-approach, ASF+SDF, language, Stratego, domain-specific language},
  researchr = {https://researchr.org/publication/Visser07},
  cites = {0},
  citedby = {9},
  pages = {291-373},
  booktitle = {Generative and Transformational Techniques in Software Engineering II, International Summer School, {GTTSE} 2007},
  editor = {Ralf Lämmel and Joost Visser and João Saraiva},
  volume = {5235},
  series = {Lecture Notes in Computer Science},
  address = {Braga, Portugal},
  publisher = {Springer},
  isbn = {978-3-540-88642-6},
}

@article{Hemel2011,
  title = "Static consistency checking of web applications with WebDSL",
  journal = "Journal of Symbolic Computation",
  volume = "46",
  number = "2",
  pages = "150 - 182",
  year = "2011",
  note = "Automated Specification and Verification of Web Systems",
  issn = "0747-7171",
  doi = "https://doi.org/10.1016/j.jsc.2010.08.006",
  url = "http://www.sciencedirect.com/science/article/pii/S0747717110001367",
  author = "Zef Hemel and Danny M. Groenewegen and Lennart C.L. Kats and Eelco Visser"
}

@article{VanAntwerpen2018,
  author = {van Antwerpen, Hendrik and Bach Poulsen, Casper and Rouvoet, Arjen and Visser, Eelco},
  title = {Scopes as Types},
  year = {2018},
  issue_date = {November 2018},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {2},
  number = {OOPSLA},
  url = {https://doi.org/10.1145/3276484},
  doi = {10.1145/3276484},
  abstract = {Scope graphs are a promising generic framework to model the binding structures of programming languages, bridging formalization and implementation, supporting the definition of type checkers and the automation of type safety proofs. However, previous work on scope graphs has been limited to simple, nominal type systems. In this paper, we show that viewing scopes as types enables us to model the internal structure of types in a range of non-simple type systems (including structural records and generic classes) using the generic representation of scopes. Further, we show that relations between such types can be expressed in terms of generalized scope graph queries. We extend scope graphs with scoped relations and queries. We introduce Statix, a new domain-specific meta-language for the specification of static semantics, based on scope graphs and constraints. We evaluate the scopes as types approach and the Statix design in case studies of the simply-typed lambda calculus with records, System F, and Featherweight Generic Java.},
  journal = {Proc. ACM Program. Lang.},
  month = {oct},
  articleno = {114},
  numpages = {30},
  keywords = {type system, domain-specific language, scope graphs, static semantics, name resolution, type checker}
}

@InProceedings{Neron2015,
  author="Neron, Pierre
  and Tolmach, Andrew
  and Visser, Eelco
  and Wachsmuth, Guido",
  editor="Vitek, Jan",
  title="A Theory of Name Resolution",
  booktitle="Programming Languages and Systems",
  year="2015",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="205--231",
  abstract="We describe a language-independent theory for name binding and resolution, suitable for programming languages with complex scoping rules including both lexical scoping and modules. We formulate name resolution as a two-stage problem. First a language-independent scope graph is constructed using language-specific rules from an abstract syntax tree. Then references in the scope graph are resolved to corresponding declarations using a language-independent resolution process. We introduce a resolution calculus as a concise, declarative, and languageindependent specification of name resolution. We develop a resolution algorithm that is sound and complete with respect to the calculus. Based on the resolution calculus we develop language-independent definitions of $\alpha$-equivalence and rename refactoring. We illustrate the approach using a small example language with modules. In addition, we show how our approach provides a model for a range of name binding patterns in existing languages.",
  isbn="978-3-662-46669-8"
}

@inproceedings{Becker2019,
  title = {Compiler Error Messages Considered Unhelpful: The Landscape of Text-Based Programming Error Message Research},
  author = {Brett A. Becker and Paul Denny and Raymond Pettit and Durell Bouchard and Dennis J. Bouvier and Brian Harrington 0001 and Amir Kamil and Amey Karkare and Chris McDonald and Peter-Michael Osera and Janice L. Pearce and James Prather},
  year = {2019},
  doi = {10.1145/3344429.3372508},
  url = {https://doi.org/10.1145/3344429.3372508},
  researchr = {https://researchr.org/publication/BeckerDPBB0KKMO19},
  cites = {0},
  citedby = {0},
  pages = {177-210},
  booktitle = {Proceedings of the Working Group Reports on Innovation and Technology in Computer Science Education, ITiCSE 2019, Aberdeen, Scotland Uk, July 15-17, 2019},
  editor = {Bruce Scharlau and Roger McDermott and Arnold Pears and Mihaela Sabin},
  publisher = {ACM},
  isbn = {978-1-4503-6895-7},
}

@inproceedings{Rafalski2019,
  title = {A Randomized Controlled Trial on the Wild Wild West of Scientific Computing with Student Learners},
  author = {Timothy Rafalski and Phillip Merlin Uesbeck and Cristina Panks-Meloney and Patrick Daleiden and William Allee and Amelia McNamara and Andreas Stefik},
  year = {2019},
  doi = {10.1145/3291279.3339421},
  url = {https://doi.org/10.1145/3291279.3339421},
  researchr = {https://researchr.org/publication/RafalskiUPDAMS19},
  cites = {0},
  citedby = {0},
  pages = {239-247},
  booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research, ICER 2019, Toronto, ON, Canada, August 12-14, 2019},
  editor = {Robert McCartney and Andrew Petersen and Anthony V. Robins and Adon Moskal},
  publisher = {ACM},
  isbn = {978-1-4503-6185-9},
}

@inproceedings{KatsV10,
  title = {The {Spoofax} language workbench: rules for declarative specification of languages and {IDEs}},
  author = {Lennart C. L. Kats and Eelco Visser},
  year = {2010},
  doi = {10.1145/1869459.1869497},
  url = {https://doi.org/10.1145/1869459.1869497},
  tags = {programming languages, model-to-model transformation, workbench, semantics, rule-based, Eclipse, meta programming, model editor, graph transformation, meta-model, transformation language, architecture, reuse, model-driven development, graph-rewriting, rules, C++, code completion, code generation, model transformation, programming, language workbench, Spoofax, Meta-Environment, rewriting, parsing, meta-objects, transformation, program transformation, domain-specific language},
  researchr = {https://researchr.org/publication/KatsV10},
  cites = {0},
  citedby = {2},
  pages = {444-463},
  booktitle = {Proceedings of the 25th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2010},
  editor = {William R. Cook and Siobhán Clarke and Martin C. Rinard},
  address = {Reno/Tahoe, Nevada},
  publisher = {ACM},
  isbn = {978-1-4503-0203-6},
}

@article{RouvoetAPKV20,
  title = {Knowing when to ask: sound scheduling of name resolution in type checkers derived from declarative specifications},
  author = {Arjen Rouvoet and Hendrik van Antwerpen and Casper Bach Poulsen and Robbert Krebbers and Eelco Visser},
  year = {2020},
  doi = {10.1145/3428248},
  url = {https://doi.org/10.1145/3428248},
  researchr = {https://researchr.org/publication/RouvoetAPKV20},
  cites = {0},
  citedby = {0},
  journal = {Proceedings of the ACM on Programming Languages},
  volume = {4},
  number = {OOPSLA},
}

@inproceedings{AmorimV20,
  title = {Multi-purpose Syntax Definition with {SDF3}},
  author = {Luis Eduardo de Souza Amorim and Eelco Visser},
  year = {2020},
  doi = {10.1007/978-3-030-58768-0_1},
  url = {https://doi.org/10.1007/978-3-030-58768-0_1},
  researchr = {https://researchr.org/publication/AmorimV20},
  cites = {0},
  citedby = {0},
  pages = {1-23},
  booktitle = {Software Engineering and Formal Methods - 18th International Conference, SEFM 2020, Amsterdam, The Netherlands, September 14-18, 2020, Proceedings},
  editor = {Frank S. de Boer and Antonio Cerone},
  volume = {12310},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer},
  isbn = {978-3-030-58768-0},
}

@article{BackusBGK0NPRSV63,
  title = {Revised report on the algorithmic language ALGOL 60},
  author = {John W. Backus and Friedrich L. Bauer and Julien Green and C. Katz and John McCarthy 0001 and Peter Naur and Alan J. Perlis and Heinz Rutishauser and Klaus Samelson and Bernard Vauquois and Joseph Henry Wegstein and Adriaan van Wijngaarden and Michael Woodger},
  year = {1963},
  doi = {10.1093/comjnl/5.4.349},
  url = {https://doi.org/10.1093/comjnl/5.4.349},
  researchr = {https://researchr.org/publication/BackusBGK0NPRSV63},
  cites = {0},
  citedby = {0},
  journal = {Comput. J.},
  volume = {5},
  number = {4},
  pages = {349-367},
}
